repeat task.wait(2) until game:IsLoaded()

if game:GetService("Players").LocalPlayer.Name == "trananhf1" then
print("ingame")
loadstring(game:HttpGet("https://raw.githubusercontent.com/trananh158/script/main/raid1/farm_tran"))()

else
loadstring(game:HttpGet("https://raw.githubusercontent.com/trananh158/script/main/raid1/farm_fes"))()

end 


--[[local RunService = game:GetService("RunService")

local TARGET_FRAME_RATE = 10

local frameStart = os.clock()

RunService.PreSimulation:Connect(function()
    while os.clock() - frameStart < 1 / TARGET_FRAME_RATE do
        -- We do nothing until the target time has elapsed
    end

    -- Mark the start of the next frame right before this one is rendered
    frameStart = os.clock()
end)

task.wait(5)
local args = {
    [1] = "Start",
    [2] = "Button"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remote"):FireServer(unpack(args))


repeat wait(0.5) until game:GetService("Players").LocalPlayer.GameData.Coins.Value >= 500
local args = {
    [1] = {
        [1] = "bolm",
        [2] = CFrame.new(34.857452392578125, 386.2886047363281, -43.65928268432617, 1, -1.3877787807814457e-16, 0, 0, 1, 0, 0, 0, 1)
    },
    [2] = Vector3.new(34.75767135620117, 385, -43.646690368652344)
}

game:GetService("ReplicatedStorage"):WaitForChild("Units"):InvokeServer(unpack(args))
repeat wait(0.55) until game:GetService("Players").LocalPlayer.GameData.Coins.Value >= 500
local args = {
    [1] = {
        [1] = "bolm",
        [2] = CFrame.new(34.857452392578125, 386.2886047363281, -43.65928268432617, 1, -1.3877787807814457e-16, 0, 0, 1, 0, 0, 0, 1)
    },
    [2] = Vector3.new(34.75767135620117, 385, -43.646690368652344)
}

game:GetService("ReplicatedStorage"):WaitForChild("Units"):InvokeServer(unpack(args))
repeat wait(0.5) until game:GetService("Players").LocalPlayer.GameData.Coins.Value >= 1450
local args = {
    [1] = {
        [1] = "Homuro (Time Traveller)",
        [2] = CFrame.new(-25.09463882446289, 387.3954772949219, -43.93950271606445, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    },
    [2] = Vector3.new(-25.11581802368164, 386, -43.94438171386719)
}

game:GetService("ReplicatedStorage"):WaitForChild("Units"):InvokeServer(unpack(args))

repeat wait(0.5) until game:GetService("Players").LocalPlayer.GameData.Coins.Value >= 1250


local args = {
    [1] = {
        [1] = "Fleeren (Full Power)",
        [2] = CFrame.new(68.97322845458984, 390.2890625, -35.9587516784668, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    },
    [2] = Vector3.new(68.99058532714844, 389, -35.965457916259766)
}

game:GetService("ReplicatedStorage"):WaitForChild("Units"):InvokeServer(unpack(args))


local checkfarm = 0

while checkfarm < 2  do
checkfarm = 0
for _, child in ipairs(workspace:WaitForChild("Maingame"):WaitForChild("Unit"):GetChildren()) do
	if child.Name == "bolm" then
	
	local args = {
				[1] = "Upgrade",
				[2] = (child)
			}
		
	game:GetService("ReplicatedStorage"):WaitForChild("UnitPlacements"):InvokeServer(unpack(args))
	
	end
	if child.Name == "bolm" and  child.Stats.UpgradeNum.Value >= 13 then
	
		checkfarm = checkfarm + 1
		print("Check farm :"..checkfarm)
	end
	end	
	wait(1)
end

print("Game start")
while true do 

	for _, child in ipairs(workspace:WaitForChild("Maingame"):WaitForChild("Unit"):GetChildren()) do
			local args = {
				[1] = "Upgrade",
				[2] = (child)
			}
		
			game:GetService("ReplicatedStorage"):WaitForChild("UnitPlacements"):InvokeServer(unpack(args))
		end
	if (workspace:WaitForChild("Maingame"):WaitForChild("Base").Health.Value <= 0 or game:GetService("Players").LocalPlayer.PlayerGui.GameVictory.Enabled == true) and _G.checkgame ~= true then
		_G.checkgame = true
		game_victory = "non"
		if game:GetService("Players").LocalPlayer.PlayerGui.GameOver.Enabled == true then 
			game_victory = "Thua"
		end
		
		if game:GetService("Players").LocalPlayer.PlayerGui.GameVictory.Enabled == true then 
			game_victory = "Tháº¯ng"
		end

		data = {
		  ["embeds"]=
		    {{
		      ["description"] = "Name :"..game:GetService("Players").LocalPlayer.Name.."\n"..game:GetService("Workspace"):WaitForChild("Maingame"):WaitForChild("Setting").Act.Value.."\n"..game_victory.."\n Reroll:"..game:GetService("Players").LocalPlayer.Data.Reroll_Tokens.Value,
		      ["color"] = null
		    }}
		}

		local porn = game:GetService("HttpService"):JSONEncode(data)
        	local headers = {["content-type"] = "application/json"}
        	local request = http_request or request or HttpPost or syn.request or http.request
        	local sex = {Url = "https://discord.com/api/webhooks/1155312152459104286/w9KlXRsVxqA4QyTsnzDz9eQRrut38tInLPRHCpqVVzeCXIj_HmzcN5i1YIknENxcVjwG", Body = porn, Method = "POST", Headers = headers}
		request(sex)
		
		local args = {
			[1] = "Return"
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Teleport"):InvokeServer(unpack(args))
	end
end
]]--
