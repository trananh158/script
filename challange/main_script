game:GetService("GuiService").ErrorMessageChanged:Connect(function()
wait (5) game:GetService("TeleportService"):Teleport(17282336195)
    end);
repeat task.wait(2) until game:IsLoaded()

print("ingame")

	while true do 
	
		--Stages  Large Village
		for _, child in ipairs(game:GetService("ReplicatedStorage"):WaitForChild("Challenge"):GetChildren()) do
			if child.ChallengeType.Value == "HIGH COST" and child.Stages.Value == "Monster City" then
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter[child.Name].CFrame
                        task.wait(1)
                        keypress(0x57)
                        task.wait(2)
                        local args = {
                        [1] = nil,
                        [2] = nil,
                        [3] = nil,
                        [4] = "Challenge"
                        }
      			game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))

			wait(50)
			end
		end
		wait(2)
	--[[
		for _, child in ipairs(game:GetService("ReplicatedStorage"):WaitForChild("Challenge"):GetChildren()) do
			if child.ChallengeType.Value ~= "HIGH COST" and child.Stages.Value == "Large Village" then
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter[child.Name].CFrame
                        task.wait(1)
                        keypress(0x57)
                        task.wait(2)
                        local args = {
                        [1] = nil,
                        [2] = nil,
                        [3] = nil,
                        [4] = "Challenge"
                        }
      			game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))

			wait(20)
			end
		end
	]]--
--[[
		if game:GetService("ReplicatedStorage"):WaitForChild("Challenge").Room1.ChallengeType.Value == "HIGH COST" and Workspace.PLAY.Challenge.Enter.Room1.Players.Value == 0 then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter.Room1.CFrame
			task.wait(1)
			keypress(0x57)
			task.wait(1)
			local args = {
			[1] = nil,
			[2] = nil,
			[3] = nil,
			[4] = "Challenge"
			}

      game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))
		elseif game:GetService("ReplicatedStorage"):WaitForChild("Challenge").Room2.ChallengeType.Value == "HIGH COST" and Workspace.PLAY.Challenge.Enter.Room2.Players.Value == 0 then 
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter.Room2.CFrame
			task.wait(1)
			keypress(0x57)
			task.wait(1)
			local args = {
			[1] = nil,
			[2] = nil,
			[3] = nil,
			[4] = "Challenge"
			}

      game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))
      elseif game:GetService("ReplicatedStorage"):WaitForChild("Challenge").Room3.ChallengeType.Value == "HIGH COST" and Workspace.PLAY.Challenge.Enter.Room3.Players.Value == 0 then 
          game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter.Room3.CFrame
    			task.wait(1)
    			keypress(0x57)
    			task.wait(1)
    			local args = {
    			[1] = nil,
    			[2] = nil,
    			[3] = nil,
    			[4] = "Challenge"
    			}
    
          game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))
      elseif game:GetService("ReplicatedStorage"):WaitForChild("Challenge").Room4.ChallengeType.Value == "HIGH COST" and Workspace.PLAY.Challenge.Enter.Room4.Players.Value == 0 then 
          game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.PLAY.Challenge.Enter.Room4.CFrame
    			task.wait(1)
    			keypress(0x57)
    			task.wait(1)
    			local args = {
    			[1] = nil,
    			[2] = nil,
    			[3] = nil,
    			[4] = "Challenge"
    			}
    
          game:GetService("ReplicatedStorage"):WaitForChild("MapStage"):WaitForChild("event"):InvokeServer(unpack(args))
        else]]--
		wait(2)
		for _, child in ipairs(game:GetService("Players").LocalPlayer.UnitsInventory:GetChildren()) do
			if child.Class.Value == "Gogo" and child.Locked.Value ~= "Locked" then
				
			print(child.Name)
			local args = {
				[1] = (child)
			}

			game:GetService("ReplicatedStorage"):WaitForChild("Lab"):InvokeServer(unpack(args))
			end
		end
		wait(1)
		local args = {
		    [1] = "Start",
		    [2] = game:GetService("Players").LocalPlayer.InfinityCastle["Room50"].Name
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("InfinityCastle"):InvokeServer(unpack(args))


		task.wait(2)
end
